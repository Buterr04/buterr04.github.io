"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[9840],{6566:(n,s)=>{s.A=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}},1288:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>c});var t=a(5916);const p=[(0,t.Fv)('<h2 id="判断闰年" tabindex="-1"><a class="header-anchor" href="#判断闰年"><span>判断闰年</span></a></h2><p>思路：判断整除4，整除100，不能整除400</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">if</span> <span class="token punctuation">(</span>month<span class="token operator">==</span><span class="token number">1</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">3</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">5</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">7</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">8</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">10</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\tday <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>month<span class="token operator">==</span><span class="token number">4</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">6</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">9</span><span class="token operator">||</span>month<span class="token operator">==</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\tday <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>month<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t<span class="token keyword">if</span> <span class="token punctuation">(</span>year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">||</span> year <span class="token operator">%</span> <span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t\t\t\tday <span class="token operator">=</span> <span class="token number">29</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n\t\t<span class="token keyword">else</span> <span class="token punctuation">{</span>\n\t\t\t\tday <span class="token operator">=</span> <span class="token number">28</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="计算正整数的长度" tabindex="-1"><a class="header-anchor" href="#计算正整数的长度"><span>计算正整数的长度</span></a></h2><p>思路：若<code>n!=0; n=n/10</code>，则加一位数字</p><h2 id="幂函数" tabindex="-1"><a class="header-anchor" href="#幂函数"><span>幂函数</span></a></h2><p>递归；运用<code>for</code>循环，直接将x乘y次</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">int</span> <span class="token function">mypow</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span><span class="token keyword">int</span> y<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">int</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;=</span>y<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        num<span class="token operator">*=</span>x<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">return</span> num<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="判断回文数" tabindex="-1"><a class="header-anchor" href="#判断回文数"><span>判断回文数</span></a></h2><p>思路：一个数除以10所得到的余数便是个位数，商是排除掉最后一位的数，则经过循环之后便可以得到反转而来的数</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">while</span> <span class="token punctuation">(</span>origin<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n        after<span class="token operator">=</span>after<span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span>origin<span class="token operator">%</span><span class="token number">10</span><span class="token punctuation">;</span>\n        origin<span class="token operator">=</span>origin<span class="token operator">/</span><span class="token number">10</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">==</span>after<span class="token punctuation">)</span><span class="token punctuation">{</span>\n        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;Yes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">else</span><span class="token punctuation">{</span>\n        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;No&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运用递归求解：不断向前推算</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">void</span> <span class="token function">reverse</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%d&quot;</span><span class="token punctuation">,</span> n <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">reverse</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>return 回去</strong></p><h1 id="一些注意的点" tabindex="-1"><a class="header-anchor" href="#一些注意的点"><span>一些注意的点</span></a></h1><p>输出”要使用<code>/&quot;</code>来表示</p><p>两个整数相除需要获得小数，那么将<code>a/b</code>转换成<code>float</code>形式，使用<code>(float)a/b</code></p><p>计算的时候遵循数学规律</p><p>可以使用<code>#define FORMATE&quot;%d\\n%d\\n&quot;</code>类似的语句实现输出格式的定义，之后只需要<code>printf(FORMATE,a,b);</code>即可实现输出</p>',19)],e={},o=(0,a(6566).A)(e,[["render",function(n,s){return(0,t.uX)(),(0,t.CE)("div",null,p)}]]),c=JSON.parse('{"path":"/notes/Ctext.html","title":"C语言经典题","lang":"zh-CN","frontmatter":{"title":"C语言经典题","icon":"fa-solid fa-hashtag","order":-1,"article":false,"author":"Buterr","date":"2023-06-07T00:00:00.000Z","category":["学习笔记"],"tag":["C语言","题目"],"sticky":true,"star":true,"footer":"BUPT2023春季课程","copyright":"Buterr","description":"判断闰年 思路：判断整除4，整除100，不能整除400 计算正整数的长度 思路：若n!=0; n=n/10，则加一位数字 幂函数 递归；运用for循环，直接将x乘y次 判断回文数 思路：一个数除以10所得到的余数便是个位数，商是排除掉最后一位的数，则经过循环之后便可以得到反转而来的数 运用递归求解：不断向前推算 return 回去 一些注意的点 输出”...","head":[["meta",{"property":"og:url","content":"https://newzone.top/notes/Ctext.html"}],["meta",{"property":"og:site_name","content":"Buterr的blog"}],["meta",{"property":"og:title","content":"C语言经典题"}],["meta",{"property":"og:description","content":"判断闰年 思路：判断整除4，整除100，不能整除400 计算正整数的长度 思路：若n!=0; n=n/10，则加一位数字 幂函数 递归；运用for循环，直接将x乘y次 判断回文数 思路：一个数除以10所得到的余数便是个位数，商是排除掉最后一位的数，则经过循环之后便可以得到反转而来的数 运用递归求解：不断向前推算 return 回去 一些注意的点 输出”..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-07-10T02:05:01.000Z"}],["meta",{"property":"article:author","content":"Buterr"}],["meta",{"property":"article:tag","content":"C语言"}],["meta",{"property":"article:tag","content":"题目"}],["meta",{"property":"article:published_time","content":"2023-06-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-07-10T02:05:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"C语言经典题\\",\\"description\\":\\"判断闰年 思路：判断整除4，整除100，不能整除400 计算正整数的长度 思路：若n!=0; n=n/10，则加一位数字 幂函数 递归；运用for循环，直接将x乘y次 判断回文数 思路：一个数除以10所得到的余数便是个位数，商是排除掉最后一位的数，则经过循环之后便可以得到反转而来的数 运用递归求解：不断向前推算 return 回去 一些注意的点 输出”...\\"}"]]},"headers":[{"level":2,"title":"判断闰年","slug":"判断闰年","link":"#判断闰年","children":[]},{"level":2,"title":"计算正整数的长度","slug":"计算正整数的长度","link":"#计算正整数的长度","children":[]},{"level":2,"title":"幂函数","slug":"幂函数","link":"#幂函数","children":[]},{"level":2,"title":"判断回文数","slug":"判断回文数","link":"#判断回文数","children":[]}],"git":{"createdTime":1752113101000,"updatedTime":1752113101000,"contributors":[{"name":"Buterr.","email":"122344168+Buterr04@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.97,"words":591},"filePathRelative":"notes/Ctext.md","localizedDate":"2023年6月7日","excerpt":"<h2>判断闰年</h2>\\n<p>思路：判断整除4，整除100，不能整除400</p>\\n<div class=\\"language-c\\" data-ext=\\"c\\" data-title=\\"c\\"><pre class=\\"language-c\\"><code><span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">1</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">3</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">5</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">7</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">8</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">10</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">12</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\tday <span class=\\"token operator\\">=</span> <span class=\\"token number\\">31</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">4</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">6</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">9</span><span class=\\"token operator\\">||</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">11</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\tday <span class=\\"token operator\\">=</span> <span class=\\"token number\\">30</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>month<span class=\\"token operator\\">==</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t<span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>year <span class=\\"token operator\\">%</span> <span class=\\"token number\\">4</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">&amp;&amp;</span> year <span class=\\"token operator\\">%</span> <span class=\\"token number\\">100</span> <span class=\\"token operator\\">!=</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">||</span> year <span class=\\"token operator\\">%</span> <span class=\\"token number\\">400</span> <span class=\\"token operator\\">==</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\tday <span class=\\"token operator\\">=</span> <span class=\\"token number\\">29</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n\\t\\t<span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n\\t\\t\\t\\tday <span class=\\"token operator\\">=</span> <span class=\\"token number\\">28</span><span class=\\"token punctuation\\">;</span>\\n\\t\\t<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}')}}]);